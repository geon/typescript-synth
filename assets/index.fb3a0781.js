import{c as m}from"./processor-keys.00085133.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const E of o.addedNodes)E.tagName==="LINK"&&E.rel==="modulepreload"&&n(E)}).observe(document,{childList:!0,subtree:!0});function i(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(e){if(e.ep)return;e.ep=!0;const o=i(e);fetch(e.href,o)}})();const _=240,p=15,d=127,a={NOTE_ON:"noteon",NOTE_OFF:"noteoff",KEY_PRESSURE:"keypressure",CC:"controlchange",PROGRAM_CHANGE:"programchange",CHANNEL_PRESSURE:"channelpressure",PITCH_BEND:"pitchbend",UNKNOWN:"unknown"},u={NOTE_OFF:128,NOTE_ON:144,KEY_PRESSURE:160,CC:176,PROGRAM_CHANGE:192,CHANNEL_PRESSURE:208,PITCH_BEND:224};function O(s,t){const i=s[0],n=s[1],e=s[2];if(i===void 0||n===void 0)throw new Error("Illegal MIDI message of length "+s.length);const o=i&_,E=i&p;let l=n&d,c=e!==void 0?e&d:0,r;switch(o){case u.NOTE_OFF:r=a.NOTE_OFF,c=0;break;case u.NOTE_ON:c===0?r=a.NOTE_OFF:r=a.NOTE_ON;break;case u.KEY_PRESSURE:r=a.KEY_PRESSURE;break;case u.CC:r=a.CC;break;case u.PROGRAM_CHANGE:r=a.PROGRAM_CHANGE,l=n;break;case u.CHANNEL_PRESSURE:r=a.CHANNEL_PRESSURE;break;case u.PITCH_BEND:if(r=a.PITCH_BEND,e===void 0)throw new Error("Missing data[2] of MIDI message.");var N=e&d,f=n&d;l=(N<<8)+f,c=0;break;default:r=a.UNKNOWN,l=0,c=0;break}return{type:r,number:l,value:c,channel:E,timestamp:t}}const g="assets/custom-synth-processor.b1534e0d.js";function R(s){const t={processorOptions:{sampleRate:s.sampleRate}};return new AudioWorkletNode(s,m,t)}async function P(){const s=new AudioContext;await s.audioWorklet.addModule(g);const t=new Map;(await navigator.requestMIDIAccess()).inputs.forEach(n=>{n.onmidimessage=e=>{var l;const o=O(e.data,e.timeStamp);((l=t.get(o.number))!=null?l:(()=>{const c=R(s);return c.connect(s.destination),t.set(o.number,c),c})()).port.postMessage(o),s.resume()}})}P();
